# These environment variables are available:
# KAMAL_RECORDED_AT
# KAMAL_PERFORMER
# KAMAL_VERSION
# KAMAL_HOSTS
# KAMAL_COMMAND
# KAMAL_SUBCOMMAND
# KAMAL_ROLE (if set)
# KAMAL_DESTINATION (if set)

#!/bin/sh

set -e  # Exit immediately on error
set -o pipefail  # Fail if any piped command fails

echo "üöÄ Running pre-deploy hook for Kamal (Locally)"

# Check if KAMAL_DESTINATION is set
if [ ! -z "$KAMAL_DESTINATION" ]; then
  echo "üõ†Ô∏è KAMAL_DESTINATION is set to $KAMAL_DESTINATION"

  # Load environment variables from the appropriate secrets file
  if [ "$KAMAL_DESTINATION" = "staging" ]; then
    echo "üîê Loading secrets for Staging..."
    if [ -f "$HOME/.kamal/secrets.staging" ]; then
      export $(cat "$HOME/.kamal/secrets.staging" | xargs)
    else
      echo "‚ùå ERROR: Secrets file for Staging not found at ~/.kamal/secrets.staging!"
      exit 1
    fi
  elif [ "$KAMAL_DESTINATION" = "prod" ]; then
    echo "üîê Loading secrets for Production..."
    if [ -f "$HOME/.kamal/secrets.prod" ]; then
      export $(cat "$HOME/.kamal/secrets.prod" | xargs)
    else
      echo "‚ùå ERROR: Secrets file for Production not found at ~/.kamal/secrets.prod!"
      exit 1
    fi
  else
    echo "‚ùå ERROR: Invalid KAMAL_DESTINATION value! It must be either 'staging' or 'prod'."
    exit 1
  fi
else
  echo "‚ö†Ô∏è KAMAL_DESTINATION is not set, skipping environment-specific secret loading."
fi

# Ensure required env vars exist
if [ -z "$TURSO_DB_URL" ]; then
  echo "‚ùå ERROR: TURSO_DB_URL is not set!"
  exit 1
fi

if [ -z "$TURSO_DB_AUTH_TOKEN" ]; then
  echo "‚ùå ERROR: TURSO_DB_AUTH_TOKEN is not set!"
  exit 1
fi

if [ -z "$TRIPLIT_SERVICE_TOKEN" ]; then
  echo "‚ùå ERROR: TRIPLIT_SERVICE_TOKEN is not set!"
  exit 1
fi

if [ -z "$PUBLIC_TRIPLIT_URL" ]; then
  echo "‚ùå ERROR: PUBLIC_TRIPLIT_URL is not set!"
  exit 1
fi


# Run Drizzle migrations locally
echo "üîÑ Running Drizzle migrations locally..."
TURSO_DB_URL="$TURSO_DB_URL" TURSO_DB_AUTH_TOKEN="$TURSO_DB_AUTH_TOKEN" npm run migrate

# Run Triplit schema push locally
echo "üîÑ Pushing Triplit schema locally..."
npx triplit schema push --token "$TRIPLIT_SERVICE_TOKEN" --remote "$PUBLIC_TRIPLIT_URL"

echo "‚úÖ Pre-deploy steps completed successfully."
